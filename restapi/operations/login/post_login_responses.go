// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Prashanth-GS/test-swagger/models"
)

// PostLoginOKCode is the HTTP code returned for type PostLoginOK
const PostLoginOKCode int = 200

/*PostLoginOK OK

swagger:response postLoginOK
*/
type PostLoginOK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginResponse `json:"body,omitempty"`
}

// NewPostLoginOK creates PostLoginOK with default headers values
func NewPostLoginOK() *PostLoginOK {

	return &PostLoginOK{}
}

// WithPayload adds the payload to the post login o k response
func (o *PostLoginOK) WithPayload(payload *models.LoginResponse) *PostLoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post login o k response
func (o *PostLoginOK) SetPayload(payload *models.LoginResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLoginBadRequestCode is the HTTP code returned for type PostLoginBadRequest
const PostLoginBadRequestCode int = 400

/*PostLoginBadRequest BAD REQUEST

swagger:response postLoginBadRequest
*/
type PostLoginBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostLoginBadRequest creates PostLoginBadRequest with default headers values
func NewPostLoginBadRequest() *PostLoginBadRequest {

	return &PostLoginBadRequest{}
}

// WithPayload adds the payload to the post login bad request response
func (o *PostLoginBadRequest) WithPayload(payload *models.GeneralResponse) *PostLoginBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post login bad request response
func (o *PostLoginBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLoginBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLoginUnauthorizedCode is the HTTP code returned for type PostLoginUnauthorized
const PostLoginUnauthorizedCode int = 401

/*PostLoginUnauthorized UNAUTHORIZED

swagger:response postLoginUnauthorized
*/
type PostLoginUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostLoginUnauthorized creates PostLoginUnauthorized with default headers values
func NewPostLoginUnauthorized() *PostLoginUnauthorized {

	return &PostLoginUnauthorized{}
}

// WithPayload adds the payload to the post login unauthorized response
func (o *PostLoginUnauthorized) WithPayload(payload *models.GeneralResponse) *PostLoginUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post login unauthorized response
func (o *PostLoginUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLoginUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLoginForbiddenCode is the HTTP code returned for type PostLoginForbidden
const PostLoginForbiddenCode int = 403

/*PostLoginForbidden FORBIDDEN

swagger:response postLoginForbidden
*/
type PostLoginForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostLoginForbidden creates PostLoginForbidden with default headers values
func NewPostLoginForbidden() *PostLoginForbidden {

	return &PostLoginForbidden{}
}

// WithPayload adds the payload to the post login forbidden response
func (o *PostLoginForbidden) WithPayload(payload *models.GeneralResponse) *PostLoginForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post login forbidden response
func (o *PostLoginForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLoginForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLoginNotFoundCode is the HTTP code returned for type PostLoginNotFound
const PostLoginNotFoundCode int = 404

/*PostLoginNotFound NOT FOUND

swagger:response postLoginNotFound
*/
type PostLoginNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostLoginNotFound creates PostLoginNotFound with default headers values
func NewPostLoginNotFound() *PostLoginNotFound {

	return &PostLoginNotFound{}
}

// WithPayload adds the payload to the post login not found response
func (o *PostLoginNotFound) WithPayload(payload *models.GeneralResponse) *PostLoginNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post login not found response
func (o *PostLoginNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLoginNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostLoginInternalServerErrorCode is the HTTP code returned for type PostLoginInternalServerError
const PostLoginInternalServerErrorCode int = 500

/*PostLoginInternalServerError INTERNAL SERVER ERROR

swagger:response postLoginInternalServerError
*/
type PostLoginInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostLoginInternalServerError creates PostLoginInternalServerError with default headers values
func NewPostLoginInternalServerError() *PostLoginInternalServerError {

	return &PostLoginInternalServerError{}
}

// WithPayload adds the payload to the post login internal server error response
func (o *PostLoginInternalServerError) WithPayload(payload *models.GeneralResponse) *PostLoginInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post login internal server error response
func (o *PostLoginInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostLoginInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
