// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Prashanth-GS/test-swagger/models"
)

// GetCallbackFacebookLoginOKCode is the HTTP code returned for type GetCallbackFacebookLoginOK
const GetCallbackFacebookLoginOKCode int = 200

/*GetCallbackFacebookLoginOK OK

swagger:response getCallbackFacebookLoginOK
*/
type GetCallbackFacebookLoginOK struct {

	/*
	  In: Body
	*/
	Payload *models.LoginResponse `json:"body,omitempty"`
}

// NewGetCallbackFacebookLoginOK creates GetCallbackFacebookLoginOK with default headers values
func NewGetCallbackFacebookLoginOK() *GetCallbackFacebookLoginOK {

	return &GetCallbackFacebookLoginOK{}
}

// WithPayload adds the payload to the get callback facebook login o k response
func (o *GetCallbackFacebookLoginOK) WithPayload(payload *models.LoginResponse) *GetCallbackFacebookLoginOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get callback facebook login o k response
func (o *GetCallbackFacebookLoginOK) SetPayload(payload *models.LoginResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCallbackFacebookLoginOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCallbackFacebookLoginBadRequestCode is the HTTP code returned for type GetCallbackFacebookLoginBadRequest
const GetCallbackFacebookLoginBadRequestCode int = 400

/*GetCallbackFacebookLoginBadRequest BAD REQUEST

swagger:response getCallbackFacebookLoginBadRequest
*/
type GetCallbackFacebookLoginBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetCallbackFacebookLoginBadRequest creates GetCallbackFacebookLoginBadRequest with default headers values
func NewGetCallbackFacebookLoginBadRequest() *GetCallbackFacebookLoginBadRequest {

	return &GetCallbackFacebookLoginBadRequest{}
}

// WithPayload adds the payload to the get callback facebook login bad request response
func (o *GetCallbackFacebookLoginBadRequest) WithPayload(payload *models.GeneralResponse) *GetCallbackFacebookLoginBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get callback facebook login bad request response
func (o *GetCallbackFacebookLoginBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCallbackFacebookLoginBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCallbackFacebookLoginUnauthorizedCode is the HTTP code returned for type GetCallbackFacebookLoginUnauthorized
const GetCallbackFacebookLoginUnauthorizedCode int = 401

/*GetCallbackFacebookLoginUnauthorized UNAUTHORIZED

swagger:response getCallbackFacebookLoginUnauthorized
*/
type GetCallbackFacebookLoginUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetCallbackFacebookLoginUnauthorized creates GetCallbackFacebookLoginUnauthorized with default headers values
func NewGetCallbackFacebookLoginUnauthorized() *GetCallbackFacebookLoginUnauthorized {

	return &GetCallbackFacebookLoginUnauthorized{}
}

// WithPayload adds the payload to the get callback facebook login unauthorized response
func (o *GetCallbackFacebookLoginUnauthorized) WithPayload(payload *models.GeneralResponse) *GetCallbackFacebookLoginUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get callback facebook login unauthorized response
func (o *GetCallbackFacebookLoginUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCallbackFacebookLoginUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCallbackFacebookLoginForbiddenCode is the HTTP code returned for type GetCallbackFacebookLoginForbidden
const GetCallbackFacebookLoginForbiddenCode int = 403

/*GetCallbackFacebookLoginForbidden FORBIDDEN

swagger:response getCallbackFacebookLoginForbidden
*/
type GetCallbackFacebookLoginForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetCallbackFacebookLoginForbidden creates GetCallbackFacebookLoginForbidden with default headers values
func NewGetCallbackFacebookLoginForbidden() *GetCallbackFacebookLoginForbidden {

	return &GetCallbackFacebookLoginForbidden{}
}

// WithPayload adds the payload to the get callback facebook login forbidden response
func (o *GetCallbackFacebookLoginForbidden) WithPayload(payload *models.GeneralResponse) *GetCallbackFacebookLoginForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get callback facebook login forbidden response
func (o *GetCallbackFacebookLoginForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCallbackFacebookLoginForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCallbackFacebookLoginNotFoundCode is the HTTP code returned for type GetCallbackFacebookLoginNotFound
const GetCallbackFacebookLoginNotFoundCode int = 404

/*GetCallbackFacebookLoginNotFound NOT FOUND

swagger:response getCallbackFacebookLoginNotFound
*/
type GetCallbackFacebookLoginNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetCallbackFacebookLoginNotFound creates GetCallbackFacebookLoginNotFound with default headers values
func NewGetCallbackFacebookLoginNotFound() *GetCallbackFacebookLoginNotFound {

	return &GetCallbackFacebookLoginNotFound{}
}

// WithPayload adds the payload to the get callback facebook login not found response
func (o *GetCallbackFacebookLoginNotFound) WithPayload(payload *models.GeneralResponse) *GetCallbackFacebookLoginNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get callback facebook login not found response
func (o *GetCallbackFacebookLoginNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCallbackFacebookLoginNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCallbackFacebookLoginInternalServerErrorCode is the HTTP code returned for type GetCallbackFacebookLoginInternalServerError
const GetCallbackFacebookLoginInternalServerErrorCode int = 500

/*GetCallbackFacebookLoginInternalServerError INTERNAL SERVER ERROR

swagger:response getCallbackFacebookLoginInternalServerError
*/
type GetCallbackFacebookLoginInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetCallbackFacebookLoginInternalServerError creates GetCallbackFacebookLoginInternalServerError with default headers values
func NewGetCallbackFacebookLoginInternalServerError() *GetCallbackFacebookLoginInternalServerError {

	return &GetCallbackFacebookLoginInternalServerError{}
}

// WithPayload adds the payload to the get callback facebook login internal server error response
func (o *GetCallbackFacebookLoginInternalServerError) WithPayload(payload *models.GeneralResponse) *GetCallbackFacebookLoginInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get callback facebook login internal server error response
func (o *GetCallbackFacebookLoginInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCallbackFacebookLoginInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
