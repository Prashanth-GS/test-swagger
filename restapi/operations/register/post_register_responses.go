// Code generated by go-swagger; DO NOT EDIT.

package register

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Prashanth-GS/test-swagger/models"
)

// PostRegisterOKCode is the HTTP code returned for type PostRegisterOK
const PostRegisterOKCode int = 200

/*PostRegisterOK OK

swagger:response postRegisterOK
*/
type PostRegisterOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostRegisterOK creates PostRegisterOK with default headers values
func NewPostRegisterOK() *PostRegisterOK {

	return &PostRegisterOK{}
}

// WithPayload adds the payload to the post register o k response
func (o *PostRegisterOK) WithPayload(payload *models.GeneralResponse) *PostRegisterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register o k response
func (o *PostRegisterOK) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterBadRequestCode is the HTTP code returned for type PostRegisterBadRequest
const PostRegisterBadRequestCode int = 400

/*PostRegisterBadRequest BAD REQUEST

swagger:response postRegisterBadRequest
*/
type PostRegisterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostRegisterBadRequest creates PostRegisterBadRequest with default headers values
func NewPostRegisterBadRequest() *PostRegisterBadRequest {

	return &PostRegisterBadRequest{}
}

// WithPayload adds the payload to the post register bad request response
func (o *PostRegisterBadRequest) WithPayload(payload *models.GeneralResponse) *PostRegisterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register bad request response
func (o *PostRegisterBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterUnauthorizedCode is the HTTP code returned for type PostRegisterUnauthorized
const PostRegisterUnauthorizedCode int = 401

/*PostRegisterUnauthorized UNAUTHORIZED

swagger:response postRegisterUnauthorized
*/
type PostRegisterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostRegisterUnauthorized creates PostRegisterUnauthorized with default headers values
func NewPostRegisterUnauthorized() *PostRegisterUnauthorized {

	return &PostRegisterUnauthorized{}
}

// WithPayload adds the payload to the post register unauthorized response
func (o *PostRegisterUnauthorized) WithPayload(payload *models.GeneralResponse) *PostRegisterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register unauthorized response
func (o *PostRegisterUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterForbiddenCode is the HTTP code returned for type PostRegisterForbidden
const PostRegisterForbiddenCode int = 403

/*PostRegisterForbidden FORBIDDEN

swagger:response postRegisterForbidden
*/
type PostRegisterForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostRegisterForbidden creates PostRegisterForbidden with default headers values
func NewPostRegisterForbidden() *PostRegisterForbidden {

	return &PostRegisterForbidden{}
}

// WithPayload adds the payload to the post register forbidden response
func (o *PostRegisterForbidden) WithPayload(payload *models.GeneralResponse) *PostRegisterForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register forbidden response
func (o *PostRegisterForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterNotFoundCode is the HTTP code returned for type PostRegisterNotFound
const PostRegisterNotFoundCode int = 404

/*PostRegisterNotFound NOT FOUND

swagger:response postRegisterNotFound
*/
type PostRegisterNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostRegisterNotFound creates PostRegisterNotFound with default headers values
func NewPostRegisterNotFound() *PostRegisterNotFound {

	return &PostRegisterNotFound{}
}

// WithPayload adds the payload to the post register not found response
func (o *PostRegisterNotFound) WithPayload(payload *models.GeneralResponse) *PostRegisterNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register not found response
func (o *PostRegisterNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterInternalServerErrorCode is the HTTP code returned for type PostRegisterInternalServerError
const PostRegisterInternalServerErrorCode int = 500

/*PostRegisterInternalServerError INTERNAL SERVER ERROR

swagger:response postRegisterInternalServerError
*/
type PostRegisterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostRegisterInternalServerError creates PostRegisterInternalServerError with default headers values
func NewPostRegisterInternalServerError() *PostRegisterInternalServerError {

	return &PostRegisterInternalServerError{}
}

// WithPayload adds the payload to the post register internal server error response
func (o *PostRegisterInternalServerError) WithPayload(payload *models.GeneralResponse) *PostRegisterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register internal server error response
func (o *PostRegisterInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
