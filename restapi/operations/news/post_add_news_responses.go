// Code generated by go-swagger; DO NOT EDIT.

package news

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Prashanth-GS/test-swagger/models"
)

// PostAddNewsOKCode is the HTTP code returned for type PostAddNewsOK
const PostAddNewsOKCode int = 200

/*PostAddNewsOK OK

swagger:response postAddNewsOK
*/
type PostAddNewsOK struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostAddNewsOK creates PostAddNewsOK with default headers values
func NewPostAddNewsOK() *PostAddNewsOK {

	return &PostAddNewsOK{}
}

// WithPayload adds the payload to the post add news o k response
func (o *PostAddNewsOK) WithPayload(payload *models.GeneralResponse) *PostAddNewsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add news o k response
func (o *PostAddNewsOK) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddNewsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAddNewsBadRequestCode is the HTTP code returned for type PostAddNewsBadRequest
const PostAddNewsBadRequestCode int = 400

/*PostAddNewsBadRequest BAD REQUEST

swagger:response postAddNewsBadRequest
*/
type PostAddNewsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostAddNewsBadRequest creates PostAddNewsBadRequest with default headers values
func NewPostAddNewsBadRequest() *PostAddNewsBadRequest {

	return &PostAddNewsBadRequest{}
}

// WithPayload adds the payload to the post add news bad request response
func (o *PostAddNewsBadRequest) WithPayload(payload *models.GeneralResponse) *PostAddNewsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add news bad request response
func (o *PostAddNewsBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddNewsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAddNewsUnauthorizedCode is the HTTP code returned for type PostAddNewsUnauthorized
const PostAddNewsUnauthorizedCode int = 401

/*PostAddNewsUnauthorized UNAUTHORIZED

swagger:response postAddNewsUnauthorized
*/
type PostAddNewsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostAddNewsUnauthorized creates PostAddNewsUnauthorized with default headers values
func NewPostAddNewsUnauthorized() *PostAddNewsUnauthorized {

	return &PostAddNewsUnauthorized{}
}

// WithPayload adds the payload to the post add news unauthorized response
func (o *PostAddNewsUnauthorized) WithPayload(payload *models.GeneralResponse) *PostAddNewsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add news unauthorized response
func (o *PostAddNewsUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddNewsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAddNewsForbiddenCode is the HTTP code returned for type PostAddNewsForbidden
const PostAddNewsForbiddenCode int = 403

/*PostAddNewsForbidden FORBIDDEN

swagger:response postAddNewsForbidden
*/
type PostAddNewsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostAddNewsForbidden creates PostAddNewsForbidden with default headers values
func NewPostAddNewsForbidden() *PostAddNewsForbidden {

	return &PostAddNewsForbidden{}
}

// WithPayload adds the payload to the post add news forbidden response
func (o *PostAddNewsForbidden) WithPayload(payload *models.GeneralResponse) *PostAddNewsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add news forbidden response
func (o *PostAddNewsForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddNewsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAddNewsNotFoundCode is the HTTP code returned for type PostAddNewsNotFound
const PostAddNewsNotFoundCode int = 404

/*PostAddNewsNotFound NOT FOUND

swagger:response postAddNewsNotFound
*/
type PostAddNewsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostAddNewsNotFound creates PostAddNewsNotFound with default headers values
func NewPostAddNewsNotFound() *PostAddNewsNotFound {

	return &PostAddNewsNotFound{}
}

// WithPayload adds the payload to the post add news not found response
func (o *PostAddNewsNotFound) WithPayload(payload *models.GeneralResponse) *PostAddNewsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add news not found response
func (o *PostAddNewsNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddNewsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAddNewsInternalServerErrorCode is the HTTP code returned for type PostAddNewsInternalServerError
const PostAddNewsInternalServerErrorCode int = 500

/*PostAddNewsInternalServerError INTERNAL SERVER ERROR

swagger:response postAddNewsInternalServerError
*/
type PostAddNewsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewPostAddNewsInternalServerError creates PostAddNewsInternalServerError with default headers values
func NewPostAddNewsInternalServerError() *PostAddNewsInternalServerError {

	return &PostAddNewsInternalServerError{}
}

// WithPayload adds the payload to the post add news internal server error response
func (o *PostAddNewsInternalServerError) WithPayload(payload *models.GeneralResponse) *PostAddNewsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post add news internal server error response
func (o *PostAddNewsInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAddNewsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
