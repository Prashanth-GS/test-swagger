// Code generated by go-swagger; DO NOT EDIT.

package news

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Prashanth-GS/test-swagger/models"
)

// GetNewsOKCode is the HTTP code returned for type GetNewsOK
const GetNewsOKCode int = 200

/*GetNewsOK OK

swagger:response getNewsOK
*/
type GetNewsOK struct {

	/*
	  In: Body
	*/
	Payload *models.AllNewsResponse `json:"body,omitempty"`
}

// NewGetNewsOK creates GetNewsOK with default headers values
func NewGetNewsOK() *GetNewsOK {

	return &GetNewsOK{}
}

// WithPayload adds the payload to the get news o k response
func (o *GetNewsOK) WithPayload(payload *models.AllNewsResponse) *GetNewsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get news o k response
func (o *GetNewsOK) SetPayload(payload *models.AllNewsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewsBadRequestCode is the HTTP code returned for type GetNewsBadRequest
const GetNewsBadRequestCode int = 400

/*GetNewsBadRequest BAD REQUEST

swagger:response getNewsBadRequest
*/
type GetNewsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetNewsBadRequest creates GetNewsBadRequest with default headers values
func NewGetNewsBadRequest() *GetNewsBadRequest {

	return &GetNewsBadRequest{}
}

// WithPayload adds the payload to the get news bad request response
func (o *GetNewsBadRequest) WithPayload(payload *models.GeneralResponse) *GetNewsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get news bad request response
func (o *GetNewsBadRequest) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewsUnauthorizedCode is the HTTP code returned for type GetNewsUnauthorized
const GetNewsUnauthorizedCode int = 401

/*GetNewsUnauthorized UNAUTHORIZED

swagger:response getNewsUnauthorized
*/
type GetNewsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetNewsUnauthorized creates GetNewsUnauthorized with default headers values
func NewGetNewsUnauthorized() *GetNewsUnauthorized {

	return &GetNewsUnauthorized{}
}

// WithPayload adds the payload to the get news unauthorized response
func (o *GetNewsUnauthorized) WithPayload(payload *models.GeneralResponse) *GetNewsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get news unauthorized response
func (o *GetNewsUnauthorized) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewsForbiddenCode is the HTTP code returned for type GetNewsForbidden
const GetNewsForbiddenCode int = 403

/*GetNewsForbidden FORBIDDEN

swagger:response getNewsForbidden
*/
type GetNewsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetNewsForbidden creates GetNewsForbidden with default headers values
func NewGetNewsForbidden() *GetNewsForbidden {

	return &GetNewsForbidden{}
}

// WithPayload adds the payload to the get news forbidden response
func (o *GetNewsForbidden) WithPayload(payload *models.GeneralResponse) *GetNewsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get news forbidden response
func (o *GetNewsForbidden) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewsNotFoundCode is the HTTP code returned for type GetNewsNotFound
const GetNewsNotFoundCode int = 404

/*GetNewsNotFound NOT FOUND

swagger:response getNewsNotFound
*/
type GetNewsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetNewsNotFound creates GetNewsNotFound with default headers values
func NewGetNewsNotFound() *GetNewsNotFound {

	return &GetNewsNotFound{}
}

// WithPayload adds the payload to the get news not found response
func (o *GetNewsNotFound) WithPayload(payload *models.GeneralResponse) *GetNewsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get news not found response
func (o *GetNewsNotFound) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetNewsInternalServerErrorCode is the HTTP code returned for type GetNewsInternalServerError
const GetNewsInternalServerErrorCode int = 500

/*GetNewsInternalServerError INTERNAL SERVER ERROR

swagger:response getNewsInternalServerError
*/
type GetNewsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.GeneralResponse `json:"body,omitempty"`
}

// NewGetNewsInternalServerError creates GetNewsInternalServerError with default headers values
func NewGetNewsInternalServerError() *GetNewsInternalServerError {

	return &GetNewsInternalServerError{}
}

// WithPayload adds the payload to the get news internal server error response
func (o *GetNewsInternalServerError) WithPayload(payload *models.GeneralResponse) *GetNewsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get news internal server error response
func (o *GetNewsInternalServerError) SetPayload(payload *models.GeneralResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetNewsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
